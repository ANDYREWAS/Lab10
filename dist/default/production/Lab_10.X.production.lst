

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed May 04 19:17:57 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210                           
   211                           	psect	idataBANK0
   212  009E                     __pidataBANK0:
   213                           
   214                           ;initializer for _mensaje
   215  009E  3448               	retlw	72
   216  009F  346F               	retlw	111
   217  00A0  346C               	retlw	108
   218  00A1  3461               	retlw	97
   219  00A2  3420               	retlw	32
   220  00A3  346D               	retlw	109
   221  00A4  3475               	retlw	117
   222  00A5  346E               	retlw	110
   223  00A6  3464               	retlw	100
   224  00A7  346F               	retlw	111
   225  00A8  340D               	retlw	13
   226  00A9  3420               	retlw	32
   227                           
   228                           	psect	nvCOMMON
   229  0074                     __pnvCOMMON:
   230  0074                     _indice:
   231  0074                     	ds	1
   232  000B                     _INTCONbits	set	11
   233  0018                     _RCSTAbits	set	24
   234  0019                     _TXREG	set	25
   235  0006                     _PORTB	set	6
   236  001A                     _RCREG	set	26
   237  000C                     _PIR1bits	set	12
   238  008C                     _PIE1bits	set	140
   239  009A                     _SPBRGH	set	154
   240  0099                     _SPBRG	set	153
   241  0098                     _TXSTAbits	set	152
   242  008F                     _OSCCONbits	set	143
   243  0086                     _TRISB	set	134
   244  0187                     _BAUDCTLbits	set	391
   245  0189                     _ANSELH	set	393
   246  0188                     _ANSEL	set	392
   247                           
   248                           	psect	cinit
   249  000F                     start_initialization:	
   250                           ; #config settings
   251                           
   252  000F                     __initialization:
   253                           
   254                           ; Initialize objects allocated to BANK0
   255  000F  1383               	bcf	3,7	;select IRP bank0
   256  0010  302C               	movlw	low (__pdataBANK0+12)
   257  0011  00FD               	movwf	btemp+-1
   258  0012  3000               	movlw	high __pidataBANK0
   259  0013  00FE               	movwf	btemp
   260  0014  309E               	movlw	low __pidataBANK0
   261  0015  00FF               	movwf	btemp+1
   262  0016  3020               	movlw	low __pdataBANK0
   263  0017  0084               	movwf	4
   264  0018  120A  118A  207C  120A  118A  	fcall	init_ram0
   265                           
   266                           ; Clear objects allocated to COMMON
   267  001D  01F5               	clrf	__pbssCOMMON& (0+127)
   268  001E                     end_of_initialization:	
   269                           ;End of C runtime variable initialization code
   270                           
   271  001E                     __end_of__initialization:
   272  001E  0183               	clrf	3
   273  001F  120A  118A  2822   	ljmp	_main	;jump to C main() function
   274                           
   275                           	psect	bssCOMMON
   276  0075                     __pbssCOMMON:
   277  0075                     _valor_old:
   278  0075                     	ds	1
   279                           
   280                           	psect	dataBANK0
   281  0020                     __pdataBANK0:
   282  0020                     _mensaje:
   283  0020                     	ds	12
   284                           
   285                           	psect	inittext
   286  0078                     init_fetch0:	
   287                           ;	Called with low address in FSR and high address in W
   288                           
   289  0078  087E               	movf	btemp,w
   290  0079  008A               	movwf	10
   291  007A  087F               	movf	btemp+1,w
   292  007B  0082               	movwf	2
   293  007C                     init_ram0:	
   294                           ;Called with:
   295                           ;	high address of idata address in btemp 
   296                           ;	low address of idata address in btemp+1 
   297                           ;	low address of data in FSR
   298                           ;	high address + 1 of data in btemp-1
   299                           
   300  007C  120A  118A  2078  120A  118A  	fcall	init_fetch0
   301  0081  0080               	movwf	0
   302  0082  0A84               	incf	4,f
   303  0083  0804               	movf	4,w
   304  0084  067D               	xorwf	btemp+-1,w
   305  0085  1903               	btfsc	3,2
   306  0086  3400               	retlw	0
   307  0087  0AFF               	incf	btemp+1,f
   308  0088  1903               	btfsc	3,2
   309  0089  0AFE               	incf	btemp,f
   310  008A  287C               	goto	init_ram0
   311                           
   312                           	psect	cstackCOMMON
   313  0070                     __pcstackCOMMON:
   314  0070                     ?_setup:
   315  0070                     ?_isr:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     ??_isr:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     ?_main:	
   322                           ; 1 bytes @ 0x0
   323                           
   324                           
   325                           ; 1 bytes @ 0x0
   326  0070                     	ds	3
   327  0073                     ??_setup:
   328  0073                     ??_main:	
   329                           ; 1 bytes @ 0x3
   330                           
   331                           
   332                           ; 1 bytes @ 0x3
   333  0073                     	ds	1
   334                           
   335                           	psect	maintext
   336  0022                     __pmaintext:	
   337 ;;
   338 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   339 ;;
   340 ;; *************** function _main *****************
   341 ;; Defined at:
   342 ;;		line 63 in file "Lab10.c"
   343 ;; Parameters:    Size  Location     Type
   344 ;;		None
   345 ;; Auto vars:     Size  Location     Type
   346 ;;		None
   347 ;; Return value:  Size  Location     Type
   348 ;;                  1    wreg      void 
   349 ;; Registers used:
   350 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   351 ;; Tracked objects:
   352 ;;		On entry : B00/0
   353 ;;		On exit  : 0/0
   354 ;;		Unchanged: 0/0
   355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   356 ;;      Params:         0       0       0       0       0
   357 ;;      Locals:         0       0       0       0       0
   358 ;;      Temps:          1       0       0       0       0
   359 ;;      Totals:         1       0       0       0       0
   360 ;;Total ram usage:        1 bytes
   361 ;; Hardware stack levels required when called: 2
   362 ;; This function calls:
   363 ;;		_setup
   364 ;; This function is called by:
   365 ;;		Startup code after reset
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369  0022                     _main:	
   370                           ;psect for function _main
   371                           
   372  0022                     l740:	
   373                           ;incstack = 0
   374                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   375                           
   376                           
   377                           ;Lab10.c: 64:     setup();
   378  0022  120A  118A  204D  120A  118A  	fcall	_setup
   379  0027                     l742:
   380                           
   381                           ;Lab10.c: 68:         indice = 0;
   382  0027  01F4               	clrf	_indice
   383  0028                     l744:
   384                           
   385                           ;Lab10.c: 69:         if (valor_old != mensaje[11]){
   386  0028  1283               	bcf	3,5	;RP0=0, select bank0
   387  0029  1303               	bcf	3,6	;RP1=0, select bank0
   388  002A  082B               	movf	_mensaje+11,w
   389  002B  0675               	xorwf	_valor_old,w
   390  002C  1903               	skipnz
   391  002D  282F               	goto	u61
   392  002E  2830               	goto	u60
   393  002F                     u61:
   394  002F  2827               	goto	l742
   395  0030                     u60:
   396  0030  283F               	goto	l752
   397  0031                     l52:
   398                           
   399                           ;Lab10.c: 72:                 if (PIR1bits.TXIF){
   400  0031  1E0C               	btfss	12,4	;volatile
   401  0032  2834               	goto	u71
   402  0033  2835               	goto	u70
   403  0034                     u71:
   404  0034  283F               	goto	l752
   405  0035                     u70:
   406  0035                     l748:
   407                           
   408                           ;Lab10.c: 73:                     TXREG = mensaje[indice];
   409  0035  0874               	movf	_indice,w
   410  0036  3E20               	addlw	(low (_mensaje| 0))& (0+255)
   411  0037  0084               	movwf	4
   412  0038  1383               	bcf	3,7	;select IRP bank0
   413  0039  0800               	movf	0,w
   414  003A  0099               	movwf	25	;volatile
   415  003B                     l750:
   416                           
   417                           ;Lab10.c: 74:                     indice++;
   418  003B  3001               	movlw	1
   419  003C  00F3               	movwf	??_main
   420  003D  0873               	movf	??_main,w
   421  003E  07F4               	addwf	_indice,f
   422  003F                     l752:
   423                           
   424                           ;Lab10.c: 71:             while(indice<12){
   425  003F  300C               	movlw	12
   426  0040  0274               	subwf	_indice,w
   427  0041  1C03               	skipc
   428  0042  2844               	goto	u81
   429  0043  2845               	goto	u80
   430  0044                     u81:
   431  0044  2831               	goto	l52
   432  0045                     u80:
   433  0045                     l754:
   434                           
   435                           ;Lab10.c: 77:             valor_old = mensaje[11];
   436  0045  082B               	movf	_mensaje+11,w
   437  0046  00F3               	movwf	??_main
   438  0047  0873               	movf	??_main,w
   439  0048  00F5               	movwf	_valor_old
   440  0049  2827               	goto	l742
   441  004A  120A  118A  280C   	ljmp	start
   442  004D                     __end_of_main:
   443                           
   444                           	psect	text1
   445  004D                     __ptext1:	
   446 ;; *************** function _setup *****************
   447 ;; Defined at:
   448 ;;		line 87 in file "Lab10.c"
   449 ;; Parameters:    Size  Location     Type
   450 ;;		None
   451 ;; Auto vars:     Size  Location     Type
   452 ;;		None
   453 ;; Return value:  Size  Location     Type
   454 ;;                  1    wreg      void 
   455 ;; Registers used:
   456 ;;		wreg, status,2, status,0
   457 ;; Tracked objects:
   458 ;;		On entry : 0/0
   459 ;;		On exit  : 0/0
   460 ;;		Unchanged: 0/0
   461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   462 ;;      Params:         0       0       0       0       0
   463 ;;      Locals:         0       0       0       0       0
   464 ;;      Temps:          0       0       0       0       0
   465 ;;      Totals:         0       0       0       0       0
   466 ;;Total ram usage:        0 bytes
   467 ;; Hardware stack levels used: 1
   468 ;; Hardware stack levels required when called: 1
   469 ;; This function calls:
   470 ;;		Nothing
   471 ;; This function is called by:
   472 ;;		_main
   473 ;; This function uses a non-reentrant model
   474 ;;
   475                           
   476  004D                     _setup:	
   477                           ;psect for function _setup
   478                           
   479  004D                     l704:	
   480                           ;incstack = 0
   481                           ; Regs used in _setup: [wreg+status,2+status,0]
   482                           
   483                           
   484                           ;Lab10.c: 88:     ANSEL = 0;
   485  004D  1683               	bsf	3,5	;RP0=1, select bank3
   486  004E  1703               	bsf	3,6	;RP1=1, select bank3
   487  004F  0188               	clrf	8	;volatile
   488                           
   489                           ;Lab10.c: 89:     ANSELH = 0;
   490  0050  0189               	clrf	9	;volatile
   491                           
   492                           ;Lab10.c: 91:     TRISB = 0;
   493  0051  1683               	bsf	3,5	;RP0=1, select bank1
   494  0052  1303               	bcf	3,6	;RP1=0, select bank1
   495  0053  0186               	clrf	6	;volatile
   496                           
   497                           ;Lab10.c: 92:     PORTB = 0;
   498  0054  1283               	bcf	3,5	;RP0=0, select bank0
   499  0055  1303               	bcf	3,6	;RP1=0, select bank0
   500  0056  0186               	clrf	6	;volatile
   501  0057                     l706:
   502                           
   503                           ;Lab10.c: 94:     OSCCONbits.IRCF = 0b100;
   504  0057  1683               	bsf	3,5	;RP0=1, select bank1
   505  0058  1303               	bcf	3,6	;RP1=0, select bank1
   506  0059  080F               	movf	15,w	;volatile
   507  005A  398F               	andlw	-113
   508  005B  3840               	iorlw	64
   509  005C  008F               	movwf	15	;volatile
   510  005D                     l708:
   511                           
   512                           ;Lab10.c: 95:     OSCCONbits.SCS = 1;
   513  005D  140F               	bsf	15,0	;volatile
   514  005E                     l710:
   515                           
   516                           ;Lab10.c: 99:     TXSTAbits.SYNC = 0;
   517  005E  1218               	bcf	24,4	;volatile
   518  005F                     l712:
   519                           
   520                           ;Lab10.c: 100:     TXSTAbits.BRGH = 1;
   521  005F  1518               	bsf	24,2	;volatile
   522  0060                     l714:
   523                           
   524                           ;Lab10.c: 101:     BAUDCTLbits.BRG16 = 1;
   525  0060  1683               	bsf	3,5	;RP0=1, select bank3
   526  0061  1703               	bsf	3,6	;RP1=1, select bank3
   527  0062  1587               	bsf	7,3	;volatile
   528  0063                     l716:
   529                           
   530                           ;Lab10.c: 103:     SPBRG = 25;
   531  0063  3019               	movlw	25
   532  0064  1683               	bsf	3,5	;RP0=1, select bank1
   533  0065  1303               	bcf	3,6	;RP1=0, select bank1
   534  0066  0099               	movwf	25	;volatile
   535  0067                     l718:
   536                           
   537                           ;Lab10.c: 104:     SPBRGH = 0;
   538  0067  019A               	clrf	26	;volatile
   539  0068                     l720:
   540                           
   541                           ;Lab10.c: 106:     RCSTAbits.SPEN = 1;
   542  0068  1283               	bcf	3,5	;RP0=0, select bank0
   543  0069  1303               	bcf	3,6	;RP1=0, select bank0
   544  006A  1798               	bsf	24,7	;volatile
   545  006B                     l722:
   546                           
   547                           ;Lab10.c: 107:     TXSTAbits.TX9 = 0;
   548  006B  1683               	bsf	3,5	;RP0=1, select bank1
   549  006C  1303               	bcf	3,6	;RP1=0, select bank1
   550  006D  1318               	bcf	24,6	;volatile
   551  006E                     l724:
   552                           
   553                           ;Lab10.c: 108:     TXSTAbits.TXEN = 1;
   554  006E  1698               	bsf	24,5	;volatile
   555  006F                     l726:
   556                           
   557                           ;Lab10.c: 109:     RCSTAbits.CREN = 1;
   558  006F  1283               	bcf	3,5	;RP0=0, select bank0
   559  0070  1303               	bcf	3,6	;RP1=0, select bank0
   560  0071  1618               	bsf	24,4	;volatile
   561  0072                     l728:
   562                           
   563                           ;Lab10.c: 112:     INTCONbits.GIE = 1;
   564  0072  178B               	bsf	11,7	;volatile
   565  0073                     l730:
   566                           
   567                           ;Lab10.c: 113:     INTCONbits.PEIE = 1;
   568  0073  170B               	bsf	11,6	;volatile
   569  0074                     l732:
   570                           
   571                           ;Lab10.c: 114:     PIE1bits.RCIE = 1;
   572  0074  1683               	bsf	3,5	;RP0=1, select bank1
   573  0075  1303               	bcf	3,6	;RP1=0, select bank1
   574  0076  168C               	bsf	12,5	;volatile
   575  0077                     l60:
   576  0077  0008               	return
   577  0078                     __end_of_setup:
   578                           
   579                           	psect	text2
   580  008B                     __ptext2:	
   581 ;; *************** function _isr *****************
   582 ;; Defined at:
   583 ;;		line 52 in file "Lab10.c"
   584 ;; Parameters:    Size  Location     Type
   585 ;;		None
   586 ;; Auto vars:     Size  Location     Type
   587 ;;		None
   588 ;; Return value:  Size  Location     Type
   589 ;;                  1    wreg      void 
   590 ;; Registers used:
   591 ;;		wreg
   592 ;; Tracked objects:
   593 ;;		On entry : 0/0
   594 ;;		On exit  : 0/0
   595 ;;		Unchanged: 0/0
   596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   597 ;;      Params:         0       0       0       0       0
   598 ;;      Locals:         0       0       0       0       0
   599 ;;      Temps:          3       0       0       0       0
   600 ;;      Totals:         3       0       0       0       0
   601 ;;Total ram usage:        3 bytes
   602 ;; Hardware stack levels used: 1
   603 ;; This function calls:
   604 ;;		Nothing
   605 ;; This function is called by:
   606 ;;		Interrupt level 1
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610  008B                     _isr:	
   611                           ;psect for function _isr
   612                           
   613  008B                     i1l734:
   614                           
   615                           ;Lab10.c: 53:     if(PIR1bits.RCIF){
   616  008B  1283               	bcf	3,5	;RP0=0, select bank0
   617  008C  1303               	bcf	3,6	;RP1=0, select bank0
   618  008D  1E8C               	btfss	12,5	;volatile
   619  008E  2890               	goto	u5_21
   620  008F  2891               	goto	u5_20
   621  0090                     u5_21:
   622  0090  2897               	goto	i1l44
   623  0091                     u5_20:
   624  0091                     i1l736:
   625                           
   626                           ;Lab10.c: 54:         mensaje[11] = RCREG;
   627  0091  081A               	movf	26,w	;volatile
   628  0092  00F0               	movwf	??_isr
   629  0093  0870               	movf	??_isr,w
   630  0094  00AB               	movwf	_mensaje+11
   631                           
   632                           ;Lab10.c: 55:         PORTB = mensaje[11];
   633  0095  082B               	movf	_mensaje+11,w
   634  0096  0086               	movwf	6	;volatile
   635  0097                     i1l44:
   636  0097  0872               	movf	??_isr+2,w
   637  0098  008A               	movwf	10
   638  0099  0E71               	swapf	??_isr+1,w
   639  009A  0083               	movwf	3
   640  009B  0EFE               	swapf	btemp,f
   641  009C  0E7E               	swapf	btemp,w
   642  009D  0009               	retfie
   643  009E                     __end_of_isr:
   644  007E                     btemp	set	126	;btemp
   645  007E                     wtemp0	set	126
   646                           
   647                           	psect	intentry
   648  0004                     __pintentry:	
   649                           ;incstack = 0
   650                           ; Regs used in _isr: [wreg]
   651                           
   652  0004                     interrupt_function:
   653  007E                     saved_w	set	btemp
   654  0004  00FE               	movwf	btemp
   655  0005  0E03               	swapf	3,w
   656  0006  00F1               	movwf	??_isr+1
   657  0007  080A               	movf	10,w
   658  0008  00F2               	movwf	??_isr+2
   659  0009  120A  118A  288B   	ljmp	_isr
   660                           
   661                           	psect	idloc
   662                           
   663                           ;Config register IDLOC0 @ 0x2000
   664                           ;	unspecified, using default values
   665  2000                     	org	8192
   666  2000  3FFF               	dw	16383
   667                           
   668                           ;Config register IDLOC1 @ 0x2001
   669                           ;	unspecified, using default values
   670  2001                     	org	8193
   671  2001  3FFF               	dw	16383
   672                           
   673                           ;Config register IDLOC2 @ 0x2002
   674                           ;	unspecified, using default values
   675  2002                     	org	8194
   676  2002  3FFF               	dw	16383
   677                           
   678                           ;Config register IDLOC3 @ 0x2003
   679                           ;	unspecified, using default values
   680  2003                     	org	8195
   681  2003  3FFF               	dw	16383
   682                           
   683                           	psect	config
   684                           
   685                           ;Config register CONFIG1 @ 0x2007
   686                           ;	Oscillator Selection bits
   687                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   688                           ;	Watchdog Timer Enable bit
   689                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   690                           ;	Power-up Timer Enable bit
   691                           ;	PWRTE = OFF, PWRT disabled
   692                           ;	RE3/MCLR pin function select bit
   693                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   694                           ;	Code Protection bit
   695                           ;	CP = OFF, Program memory code protection is disabled
   696                           ;	Data Code Protection bit
   697                           ;	CPD = OFF, Data memory code protection is disabled
   698                           ;	Brown Out Reset Selection bits
   699                           ;	BOREN = OFF, BOR disabled
   700                           ;	Internal External Switchover bit
   701                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   702                           ;	Fail-Safe Clock Monitor Enabled bit
   703                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   704                           ;	Low Voltage Programming Enable bit
   705                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   706                           ;	In-Circuit Debugger Mode bit
   707                           ;	DEBUG = 0x1, unprogrammed default
   708  2007                     	org	8199
   709  2007  20D4               	dw	8404
   710                           
   711                           ;Config register CONFIG2 @ 0x2008
   712                           ;	Brown-out Reset Selection bit
   713                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   714                           ;	Flash Program Memory Self Write Enable bits
   715                           ;	WRT = OFF, Write protection off
   716  2008                     	org	8200
   717  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         1
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       6
    BANK0            80      0      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              3 COMMON     1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       C       5       15.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       6       1       42.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      12      12        0.0%
ABS                  0      0      12       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed May 04 19:17:57 2022

                      pc 0002                       l60 0077                       l52 0031  
                     u60 0030                       u61 002F                       u70 0035  
                     u71 0034                       u80 0045                       u81 0044  
                     fsr 0004                      l710 005E                      l720 0068  
                    l712 005F                      l704 004D                      l730 0073  
                    l722 006B                      l714 0060                      l706 0057  
                    l732 0074                      l724 006E                      l716 0063  
                    l708 005D                      l740 0022                      l726 006F  
                    l718 0067                      l750 003B                      l742 0027  
                    l728 0072                      l752 003F                      l744 0028  
                    l754 0045                      l748 0035                      _isr 008B  
                    fsr0 0004                      indf 0000                     ?_isr 0070  
                   i1l44 0097                     u5_20 0091                     u5_21 0090  
                   _main 0022                     btemp 007E                     start 000C  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l734 008B                    i1l736 0091                    _RCREG 001A  
                  _SPBRG 0099                    _PORTB 0006                    _TRISB 0086  
                  _TXREG 0019                    _setup 004D                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 004D                   ??_main 0073                   ?_setup 0070  
                 _ANSELH 0189                   _SPBRGH 009A                   _indice 0074  
                 saved_w 007E  __end_of__initialization 001E           __pcstackCOMMON 0070  
           __pidataBANK0 009E            __end_of_setup 0078                  ??_setup 0073  
             __pnvCOMMON 0074               __pmaintext 0022               __pintentry 0004  
                __ptext1 004D                  __ptext2 008B                  _mensaje 0020  
   end_of_initialization 001E                _RCSTAbits 0018                _TXSTAbits 0098  
            _BAUDCTLbits 0187      start_initialization 000F              __end_of_isr 009E  
             init_fetch0 0078              __pdataBANK0 0020              __pbssCOMMON 0075  
              ___latbits 0002        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C                _valor_old 0075               _INTCONbits 000B  
               init_ram0 007C                 intlevel1 0000               _OSCCONbits 008F  
