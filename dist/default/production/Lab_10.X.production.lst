

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sat May 07 20:04:41 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  000B                     _INTCONbits	set	11
   209  0018                     _RCSTAbits	set	24
   210  0008                     _PORTD	set	8
   211  0006                     _PORTB	set	6
   212  0005                     _PORTA	set	5
   213  0019                     _TXREG	set	25
   214  001A                     _RCREG	set	26
   215  001E                     _ADRESH	set	30
   216  001F                     _ADCON0bits	set	31
   217  000C                     _PIR1bits	set	12
   218  009F                     _ADCON1bits	set	159
   219  008C                     _PIE1bits	set	140
   220  009A                     _SPBRGH	set	154
   221  0099                     _SPBRG	set	153
   222  0098                     _TXSTAbits	set	152
   223  008F                     _OSCCONbits	set	143
   224  0088                     _TRISD	set	136
   225  0086                     _TRISB	set	134
   226  0085                     _TRISA	set	133
   227  0187                     _BAUDCTLbits	set	391
   228  0189                     _ANSELH	set	393
   229  0188                     _ANSEL	set	392
   230                           
   231                           	psect	cinit
   232  000F                     start_initialization:	
   233                           ; #config settings
   234                           
   235  000F                     __initialization:
   236                           
   237                           ; Clear objects allocated to COMMON
   238  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   239  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   240  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   241  0012  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   242  0013                     end_of_initialization:	
   243                           ;End of C runtime variable initialization code
   244                           
   245  0013                     __end_of__initialization:
   246  0013  0183               	clrf	3
   247  0014  120A  118A  28BC   	ljmp	_main	;jump to C main() function
   248                           
   249                           	psect	bssCOMMON
   250  0077                     __pbssCOMMON:
   251  0077                     _pot:
   252  0077                     	ds	1
   253  0078                     _valor_old:
   254  0078                     	ds	1
   255  0079                     _indice:
   256  0079                     	ds	1
   257  007A                     _mensaje:
   258  007A                     	ds	1
   259                           
   260                           	psect	cstackCOMMON
   261  0070                     __pcstackCOMMON:
   262  0070                     ?_leerpot:
   263  0070                     ??_leerpot:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0070                     ?_enviarASCII:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0070                     ??_enviarASCII:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0070                     ?_setup:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0070                     ?_isr:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0070                     ?_main:	
   279                           ; 1 bytes @ 0x0
   280                           
   281                           
   282                           ; 1 bytes @ 0x0
   283  0070                     	ds	3
   284  0073                     ??_isr:
   285                           
   286                           ; 1 bytes @ 0x3
   287  0073                     	ds	3
   288  0076                     ??_setup:
   289                           
   290                           ; 1 bytes @ 0x6
   291  0076                     	ds	1
   292  0077                     ??_main:
   293                           
   294                           	psect	maintext
   295  00BC                     __pmaintext:	
   296                           ; 1 bytes @ 0x7
   297 ;;
   298 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   299 ;;
   300 ;; *************** function _main *****************
   301 ;; Defined at:
   302 ;;		line 94 in file "Postlab10.c"
   303 ;; Parameters:    Size  Location     Type
   304 ;;		None
   305 ;; Auto vars:     Size  Location     Type
   306 ;;		None
   307 ;; Return value:  Size  Location     Type
   308 ;;                  1    wreg      void 
   309 ;; Registers used:
   310 ;;		wreg, status,2, status,0, pclath, cstack
   311 ;; Tracked objects:
   312 ;;		On entry : B00/0
   313 ;;		On exit  : 0/0
   314 ;;		Unchanged: 0/0
   315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   316 ;;      Params:         0       0       0       0       0
   317 ;;      Locals:         0       0       0       0       0
   318 ;;      Temps:          0       0       0       0       0
   319 ;;      Totals:         0       0       0       0       0
   320 ;;Total ram usage:        0 bytes
   321 ;; Hardware stack levels required when called: 3
   322 ;; This function calls:
   323 ;;		_setup
   324 ;; This function is called by:
   325 ;;		Startup code after reset
   326 ;; This function uses a non-reentrant model
   327 ;;
   328                           
   329  00BC                     _main:	
   330                           ;psect for function _main
   331                           
   332  00BC                     l774:	
   333                           ;incstack = 0
   334                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   335                           
   336                           
   337                           ;Postlab10.c: 95:     setup();
   338  00BC  120A  118A  2017  120A  118A  	fcall	_setup
   339  00C1                     l776:
   340                           
   341                           ;Postlab10.c: 98:         if(ADCON0bits.GO == 0){
   342  00C1  1283               	bcf	3,5	;RP0=0, select bank0
   343  00C2  1303               	bcf	3,6	;RP1=0, select bank0
   344  00C3  189F               	btfsc	31,1	;volatile
   345  00C4  28C6               	goto	u61
   346  00C5  28C7               	goto	u60
   347  00C6                     u61:
   348  00C6  28C1               	goto	l776
   349  00C7                     u60:
   350  00C7                     l778:
   351                           
   352                           ;Postlab10.c: 99:            ADCON0bits.GO = 1;
   353  00C7  149F               	bsf	31,1	;volatile
   354  00C8  28C1               	goto	l776
   355  00C9  120A  118A  280C   	ljmp	start
   356  00CC                     __end_of_main:
   357                           
   358                           	psect	text1
   359  0017                     __ptext1:	
   360 ;; *************** function _setup *****************
   361 ;; Defined at:
   362 ;;		line 111 in file "Postlab10.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;		None
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      void 
   369 ;; Registers used:
   370 ;;		wreg, status,2, status,0
   371 ;; Tracked objects:
   372 ;;		On entry : 0/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   376 ;;      Params:         0       0       0       0       0
   377 ;;      Locals:         0       0       0       0       0
   378 ;;      Temps:          1       0       0       0       0
   379 ;;      Totals:         1       0       0       0       0
   380 ;;Total ram usage:        1 bytes
   381 ;; Hardware stack levels used: 1
   382 ;; Hardware stack levels required when called: 2
   383 ;; This function calls:
   384 ;;		Nothing
   385 ;; This function is called by:
   386 ;;		_main
   387 ;; This function uses a non-reentrant model
   388 ;;
   389                           
   390  0017                     _setup:	
   391                           ;psect for function _setup
   392                           
   393  0017                     l704:	
   394                           ;incstack = 0
   395                           ; Regs used in _setup: [wreg+status,2+status,0]
   396                           
   397                           
   398                           ;Postlab10.c: 113:     ANSEL = 0b00000001;
   399  0017  3001               	movlw	1
   400  0018  1683               	bsf	3,5	;RP0=1, select bank3
   401  0019  1703               	bsf	3,6	;RP1=1, select bank3
   402  001A  0088               	movwf	8	;volatile
   403  001B                     l706:
   404                           
   405                           ;Postlab10.c: 114:     ANSELH = 0;
   406  001B  0189               	clrf	9	;volatile
   407  001C                     l708:
   408                           
   409                           ;Postlab10.c: 116:     TRISA = 0b00000001;
   410  001C  3001               	movlw	1
   411  001D  1683               	bsf	3,5	;RP0=1, select bank1
   412  001E  1303               	bcf	3,6	;RP1=0, select bank1
   413  001F  0085               	movwf	5	;volatile
   414                           
   415                           ;Postlab10.c: 117:     PORTA = 0;
   416  0020  1283               	bcf	3,5	;RP0=0, select bank0
   417  0021  1303               	bcf	3,6	;RP1=0, select bank0
   418  0022  0185               	clrf	5	;volatile
   419                           
   420                           ;Postlab10.c: 119:     TRISB = 0;
   421  0023  1683               	bsf	3,5	;RP0=1, select bank1
   422  0024  1303               	bcf	3,6	;RP1=0, select bank1
   423  0025  0186               	clrf	6	;volatile
   424                           
   425                           ;Postlab10.c: 120:     PORTB = 0;
   426  0026  1283               	bcf	3,5	;RP0=0, select bank0
   427  0027  1303               	bcf	3,6	;RP1=0, select bank0
   428  0028  0186               	clrf	6	;volatile
   429                           
   430                           ;Postlab10.c: 122:     TRISD = 0;
   431  0029  1683               	bsf	3,5	;RP0=1, select bank1
   432  002A  1303               	bcf	3,6	;RP1=0, select bank1
   433  002B  0188               	clrf	8	;volatile
   434                           
   435                           ;Postlab10.c: 123:     PORTD = 0;
   436  002C  1283               	bcf	3,5	;RP0=0, select bank0
   437  002D  1303               	bcf	3,6	;RP1=0, select bank0
   438  002E  0188               	clrf	8	;volatile
   439  002F                     l710:
   440                           
   441                           ;Postlab10.c: 125:     OSCCONbits.IRCF = 0b100;
   442  002F  1683               	bsf	3,5	;RP0=1, select bank1
   443  0030  1303               	bcf	3,6	;RP1=0, select bank1
   444  0031  080F               	movf	15,w	;volatile
   445  0032  398F               	andlw	-113
   446  0033  3840               	iorlw	64
   447  0034  008F               	movwf	15	;volatile
   448  0035                     l712:
   449                           
   450                           ;Postlab10.c: 126:     OSCCONbits.SCS = 1;
   451  0035  140F               	bsf	15,0	;volatile
   452  0036                     l714:
   453                           
   454                           ;Postlab10.c: 130:     TXSTAbits.SYNC = 0;
   455  0036  1218               	bcf	24,4	;volatile
   456  0037                     l716:
   457                           
   458                           ;Postlab10.c: 131:     TXSTAbits.BRGH = 1;
   459  0037  1518               	bsf	24,2	;volatile
   460  0038                     l718:
   461                           
   462                           ;Postlab10.c: 132:     BAUDCTLbits.BRG16 = 1;
   463  0038  1683               	bsf	3,5	;RP0=1, select bank3
   464  0039  1703               	bsf	3,6	;RP1=1, select bank3
   465  003A  1587               	bsf	7,3	;volatile
   466  003B                     l720:
   467                           
   468                           ;Postlab10.c: 134:     SPBRG = 25;
   469  003B  3019               	movlw	25
   470  003C  1683               	bsf	3,5	;RP0=1, select bank1
   471  003D  1303               	bcf	3,6	;RP1=0, select bank1
   472  003E  0099               	movwf	25	;volatile
   473  003F                     l722:
   474                           
   475                           ;Postlab10.c: 135:     SPBRGH = 0;
   476  003F  019A               	clrf	26	;volatile
   477  0040                     l724:
   478                           
   479                           ;Postlab10.c: 137:     RCSTAbits.SPEN = 1;
   480  0040  1283               	bcf	3,5	;RP0=0, select bank0
   481  0041  1303               	bcf	3,6	;RP1=0, select bank0
   482  0042  1798               	bsf	24,7	;volatile
   483  0043                     l726:
   484                           
   485                           ;Postlab10.c: 138:     TXSTAbits.TX9 = 0;
   486  0043  1683               	bsf	3,5	;RP0=1, select bank1
   487  0044  1303               	bcf	3,6	;RP1=0, select bank1
   488  0045  1318               	bcf	24,6	;volatile
   489  0046                     l728:
   490                           
   491                           ;Postlab10.c: 139:     TXSTAbits.TXEN = 1;
   492  0046  1698               	bsf	24,5	;volatile
   493  0047                     l730:
   494                           
   495                           ;Postlab10.c: 140:     RCSTAbits.CREN = 1;
   496  0047  1283               	bcf	3,5	;RP0=0, select bank0
   497  0048  1303               	bcf	3,6	;RP1=0, select bank0
   498  0049  1618               	bsf	24,4	;volatile
   499  004A                     l732:
   500                           
   501                           ;Postlab10.c: 143:     INTCONbits.GIE = 1;
   502  004A  178B               	bsf	11,7	;volatile
   503  004B                     l734:
   504                           
   505                           ;Postlab10.c: 144:     INTCONbits.PEIE = 1;
   506  004B  170B               	bsf	11,6	;volatile
   507  004C                     l736:
   508                           
   509                           ;Postlab10.c: 145:     PIE1bits.RCIE = 1;
   510  004C  1683               	bsf	3,5	;RP0=1, select bank1
   511  004D  1303               	bcf	3,6	;RP1=0, select bank1
   512  004E  168C               	bsf	12,5	;volatile
   513  004F                     l738:
   514                           
   515                           ;Postlab10.c: 146:     PIE1bits.ADIE = 1;
   516  004F  170C               	bsf	12,6	;volatile
   517  0050                     l740:
   518                           
   519                           ;Postlab10.c: 147:     PIR1bits.ADIF = 0;
   520  0050  1283               	bcf	3,5	;RP0=0, select bank0
   521  0051  1303               	bcf	3,6	;RP1=0, select bank0
   522  0052  130C               	bcf	12,6	;volatile
   523  0053                     l742:
   524                           
   525                           ;Postlab10.c: 150:     ADCON0bits.ADCS = 0b01;
   526  0053  081F               	movf	31,w	;volatile
   527  0054  393F               	andlw	-193
   528  0055  3840               	iorlw	64
   529  0056  009F               	movwf	31	;volatile
   530  0057                     l744:
   531                           
   532                           ;Postlab10.c: 152:     ADCON1bits.VCFG0 = 0;
   533  0057  1683               	bsf	3,5	;RP0=1, select bank1
   534  0058  1303               	bcf	3,6	;RP1=0, select bank1
   535  0059  121F               	bcf	31,4	;volatile
   536  005A                     l746:
   537                           
   538                           ;Postlab10.c: 153:     ADCON1bits.VCFG1 = 1;
   539  005A  169F               	bsf	31,5	;volatile
   540  005B                     l748:
   541                           
   542                           ;Postlab10.c: 155:     ADCON0bits.CHS = 0b0000;
   543  005B  30C3               	movlw	-61
   544  005C  1283               	bcf	3,5	;RP0=0, select bank0
   545  005D  1303               	bcf	3,6	;RP1=0, select bank0
   546  005E  059F               	andwf	31,f	;volatile
   547  005F                     l750:
   548                           
   549                           ;Postlab10.c: 156:     ADCON1bits.ADFM = 0;
   550  005F  1683               	bsf	3,5	;RP0=1, select bank1
   551  0060  1303               	bcf	3,6	;RP1=0, select bank1
   552  0061  139F               	bcf	31,7	;volatile
   553  0062                     l752:
   554                           
   555                           ;Postlab10.c: 157:     ADCON0bits.ADON = 1;
   556  0062  1283               	bcf	3,5	;RP0=0, select bank0
   557  0063  1303               	bcf	3,6	;RP1=0, select bank0
   558  0064  141F               	bsf	31,0	;volatile
   559  0065                     l754:
   560                           
   561                           ;Postlab10.c: 158:     _delay((unsigned long)((40)*(1000000/4000000.0)));
   562  0065  3003               	movlw	3
   563  0066  00F6               	movwf	??_setup
   564  0067                     u87:
   565  0067  0BF6               	decfsz	??_setup,f
   566  0068  2867               	goto	u87
   567  0069                     l82:
   568  0069  0008               	return
   569  006A                     __end_of_setup:
   570                           
   571                           	psect	text2
   572  006A                     __ptext2:	
   573 ;; *************** function _isr *****************
   574 ;; Defined at:
   575 ;;		line 65 in file "Postlab10.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;		None
   578 ;; Auto vars:     Size  Location     Type
   579 ;;		None
   580 ;; Return value:  Size  Location     Type
   581 ;;                  1    wreg      void 
   582 ;; Registers used:
   583 ;;		wreg, status,2, status,0, pclath, cstack
   584 ;; Tracked objects:
   585 ;;		On entry : 0/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   589 ;;      Params:         0       0       0       0       0
   590 ;;      Locals:         0       0       0       0       0
   591 ;;      Temps:          3       0       0       0       0
   592 ;;      Totals:         3       0       0       0       0
   593 ;;Total ram usage:        3 bytes
   594 ;; Hardware stack levels used: 1
   595 ;; Hardware stack levels required when called: 1
   596 ;; This function calls:
   597 ;;		_enviarASCII
   598 ;;		_leerpot
   599 ;; This function is called by:
   600 ;;		Interrupt level 1
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604  006A                     _isr:	
   605                           ;psect for function _isr
   606                           
   607  006A                     i1l756:
   608                           
   609                           ;Postlab10.c: 66:     if(PIR1bits.ADIF){
   610  006A  1283               	bcf	3,5	;RP0=0, select bank0
   611  006B  1303               	bcf	3,6	;RP1=0, select bank0
   612  006C  1F0C               	btfss	12,6	;volatile
   613  006D  286F               	goto	u3_21
   614  006E  2870               	goto	u3_20
   615  006F                     u3_21:
   616  006F  287E               	goto	i1l764
   617  0070                     u3_20:
   618  0070                     i1l758:
   619                           
   620                           ;Postlab10.c: 67:         if(ADCON0bits.CHS == 0){
   621  0070  0C1F               	rrf	31,w	;volatile
   622  0071  00F3               	movwf	??_isr
   623  0072  0C73               	rrf	??_isr,w
   624  0073  390F               	andlw	15
   625  0074  3A00               	xorlw	0
   626  0075  1D03               	skipz
   627  0076  2878               	goto	u4_21
   628  0077  2879               	goto	u4_20
   629  0078                     u4_21:
   630  0078  287D               	goto	i1l762
   631  0079                     u4_20:
   632  0079                     i1l760:
   633                           
   634                           ;Postlab10.c: 68:             pot = ADRESH;
   635  0079  081E               	movf	30,w	;volatile
   636  007A  00F3               	movwf	??_isr
   637  007B  0873               	movf	??_isr,w
   638  007C  00F7               	movwf	_pot
   639  007D                     i1l762:
   640                           
   641                           ;Postlab10.c: 72:         PIR1bits.ADIF = 0;
   642  007D  130C               	bcf	12,6	;volatile
   643  007E                     i1l764:
   644                           
   645                           ;Postlab10.c: 75:     if(PIR1bits.RCIF){
   646  007E  1E8C               	btfss	12,5	;volatile
   647  007F  2881               	goto	u5_21
   648  0080  2882               	goto	u5_20
   649  0081                     u5_21:
   650  0081  289A               	goto	i1l70
   651  0082                     u5_20:
   652  0082                     i1l766:
   653                           
   654                           ;Postlab10.c: 76:         mensaje = RCREG;
   655  0082  081A               	movf	26,w	;volatile
   656  0083  00F3               	movwf	??_isr
   657  0084  0873               	movf	??_isr,w
   658  0085  00FA               	movwf	_mensaje
   659                           
   660                           ;Postlab10.c: 77:         TXREG = mensaje;
   661  0086  087A               	movf	_mensaje,w
   662  0087  0099               	movwf	25	;volatile
   663                           
   664                           ;Postlab10.c: 78:         if(mensaje = 49){
   665  0088  3031               	movlw	49
   666  0089  00F3               	movwf	??_isr
   667  008A  0873               	movf	??_isr,w
   668  008B  00FA               	movwf	_mensaje
   669  008C                     i1l768:
   670                           
   671                           ;Postlab10.c: 79:             leerpot();
   672  008C  120A  118A  20A1  120A  118A  	fcall	_leerpot
   673  0091                     i1l770:
   674                           
   675                           ;Postlab10.c: 81:         if(mensaje = 50){
   676  0091  3032               	movlw	50
   677  0092  00F3               	movwf	??_isr
   678  0093  0873               	movf	??_isr,w
   679  0094  00FA               	movwf	_mensaje
   680                           
   681                           ;Postlab10.c: 82:             enviarASCII();
   682  0095  120A  118A  20CC  120A  118A  	fcall	_enviarASCII
   683  009A                     i1l70:
   684  009A  0875               	movf	??_isr+2,w
   685  009B  008A               	movwf	10
   686  009C  0E74               	swapf	??_isr+1,w
   687  009D  0083               	movwf	3
   688  009E  0EFE               	swapf	btemp,f
   689  009F  0E7E               	swapf	btemp,w
   690  00A0  0009               	retfie
   691  00A1                     __end_of_isr:
   692                           
   693                           	psect	intentry
   694  0004                     __pintentry:	
   695                           ;incstack = 0
   696                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   697                           
   698  0004                     interrupt_function:
   699  007E                     saved_w	set	btemp
   700  0004  00FE               	movwf	btemp
   701  0005  0E03               	swapf	3,w
   702  0006  00F4               	movwf	??_isr+1
   703  0007  080A               	movf	10,w
   704  0008  00F5               	movwf	??_isr+2
   705  0009  120A  118A  286A   	ljmp	_isr
   706                           
   707                           	psect	text3
   708  00A1                     __ptext3:	
   709 ;; *************** function _leerpot *****************
   710 ;; Defined at:
   711 ;;		line 175 in file "Postlab10.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;		None
   714 ;; Auto vars:     Size  Location     Type
   715 ;;		None
   716 ;; Return value:  Size  Location     Type
   717 ;;                  1    wreg      void 
   718 ;; Registers used:
   719 ;;		wreg, status,2, status,0
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   725 ;;      Params:         0       0       0       0       0
   726 ;;      Locals:         0       0       0       0       0
   727 ;;      Temps:          3       0       0       0       0
   728 ;;      Totals:         3       0       0       0       0
   729 ;;Total ram usage:        3 bytes
   730 ;; Hardware stack levels used: 1
   731 ;; This function calls:
   732 ;;		Nothing
   733 ;; This function is called by:
   734 ;;		_isr
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738  00A1                     _leerpot:	
   739                           ;psect for function _leerpot
   740                           
   741  00A1                     i1l692:	
   742                           ;incstack = 0
   743                           ; Regs used in _leerpot: [wreg+status,2+status,0]
   744                           
   745                           
   746                           ;Postlab10.c: 176:     while(RCREG == 49){
   747  00A1  28B3               	goto	i1l696
   748  00A2                     i1l694:
   749                           
   750                           ;Postlab10.c: 177:         PORTD = pot;
   751  00A2  0877               	movf	_pot,w
   752  00A3  0088               	movwf	8	;volatile
   753                           
   754                           ;Postlab10.c: 178:         TXREG = PORTD;
   755  00A4  0808               	movf	8,w	;volatile
   756  00A5  0099               	movwf	25	;volatile
   757                           
   758                           ;Postlab10.c: 180:         _delay((unsigned long)((1500)*(1000000/4000.0)));
   759  00A6  3002               	movlw	2
   760  00A7  00F2               	movwf	??_leerpot+2
   761  00A8  30E7               	movlw	231
   762  00A9  00F1               	movwf	??_leerpot+1
   763  00AA  3000               	movlw	0
   764  00AB  00F0               	movwf	??_leerpot
   765  00AC                     u9_27:
   766  00AC  0BF0               	decfsz	??_leerpot,f
   767  00AD  28AC               	goto	u9_27
   768  00AE  0BF1               	decfsz	??_leerpot+1,f
   769  00AF  28AC               	goto	u9_27
   770  00B0  0BF2               	decfsz	??_leerpot+2,f
   771  00B1  28AC               	goto	u9_27
   772  00B2  0000               	nop
   773  00B3                     i1l696:
   774                           
   775                           ;Postlab10.c: 176:     while(RCREG == 49){
   776  00B3  3031               	movlw	49
   777  00B4  1283               	bcf	3,5	;RP0=0, select bank0
   778  00B5  1303               	bcf	3,6	;RP1=0, select bank0
   779  00B6  061A               	xorwf	26,w	;volatile
   780  00B7  1903               	btfsc	3,2
   781  00B8  28BA               	goto	u1_21
   782  00B9  28BB               	goto	u1_20
   783  00BA                     u1_21:
   784  00BA  28A2               	goto	i1l694
   785  00BB                     u1_20:
   786  00BB                     i1l94:
   787  00BB  0008               	return
   788  00BC                     __end_of_leerpot:
   789                           
   790                           	psect	text4
   791  00CC                     __ptext4:	
   792 ;; *************** function _enviarASCII *****************
   793 ;; Defined at:
   794 ;;		line 186 in file "Postlab10.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;		None
   797 ;; Auto vars:     Size  Location     Type
   798 ;;		None
   799 ;; Return value:  Size  Location     Type
   800 ;;                  1    wreg      void 
   801 ;; Registers used:
   802 ;;		wreg, status,2, status,0
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   808 ;;      Params:         0       0       0       0       0
   809 ;;      Locals:         0       0       0       0       0
   810 ;;      Temps:          0       0       0       0       0
   811 ;;      Totals:         0       0       0       0       0
   812 ;;Total ram usage:        0 bytes
   813 ;; Hardware stack levels used: 1
   814 ;; This function calls:
   815 ;;		Nothing
   816 ;; This function is called by:
   817 ;;		_isr
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821  00CC                     _enviarASCII:	
   822                           ;psect for function _enviarASCII
   823                           
   824  00CC                     i1l698:	
   825                           ;incstack = 0
   826                           ; Regs used in _enviarASCII: [wreg+status,2+status,0]
   827                           
   828                           
   829                           ;Postlab10.c: 187:     while(RCREG == 50){
   830  00CC  28CF               	goto	i1l702
   831  00CD                     i1l700:
   832                           
   833                           ;Postlab10.c: 188:         PORTB = RCREG;
   834  00CD  081A               	movf	26,w	;volatile
   835  00CE  0086               	movwf	6	;volatile
   836  00CF                     i1l702:
   837                           
   838                           ;Postlab10.c: 187:     while(RCREG == 50){
   839  00CF  3032               	movlw	50
   840  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   841  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   842  00D2  061A               	xorwf	26,w	;volatile
   843  00D3  1903               	btfsc	3,2
   844  00D4  28D6               	goto	u2_21
   845  00D5  28D7               	goto	u2_20
   846  00D6                     u2_21:
   847  00D6  28CD               	goto	i1l700
   848  00D7                     u2_20:
   849  00D7                     i1l100:
   850  00D7  0008               	return
   851  00D8                     __end_of_enviarASCII:
   852  007E                     btemp	set	126	;btemp
   853  007E                     wtemp0	set	126
   854                           
   855                           	psect	idloc
   856                           
   857                           ;Config register IDLOC0 @ 0x2000
   858                           ;	unspecified, using default values
   859  2000                     	org	8192
   860  2000  3FFF               	dw	16383
   861                           
   862                           ;Config register IDLOC1 @ 0x2001
   863                           ;	unspecified, using default values
   864  2001                     	org	8193
   865  2001  3FFF               	dw	16383
   866                           
   867                           ;Config register IDLOC2 @ 0x2002
   868                           ;	unspecified, using default values
   869  2002                     	org	8194
   870  2002  3FFF               	dw	16383
   871                           
   872                           ;Config register IDLOC3 @ 0x2003
   873                           ;	unspecified, using default values
   874  2003                     	org	8195
   875  2003  3FFF               	dw	16383
   876                           
   877                           	psect	config
   878                           
   879                           ;Config register CONFIG1 @ 0x2007
   880                           ;	Oscillator Selection bits
   881                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   882                           ;	Watchdog Timer Enable bit
   883                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   884                           ;	Power-up Timer Enable bit
   885                           ;	PWRTE = OFF, PWRT disabled
   886                           ;	RE3/MCLR pin function select bit
   887                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   888                           ;	Code Protection bit
   889                           ;	CP = OFF, Program memory code protection is disabled
   890                           ;	Data Code Protection bit
   891                           ;	CPD = OFF, Data memory code protection is disabled
   892                           ;	Brown Out Reset Selection bits
   893                           ;	BOREN = OFF, BOR disabled
   894                           ;	Internal External Switchover bit
   895                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   896                           ;	Fail-Safe Clock Monitor Enabled bit
   897                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   898                           ;	Low Voltage Programming Enable bit
   899                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   900                           ;	In-Circuit Debugger Mode bit
   901                           ;	DEBUG = 0x1, unprogrammed default
   902  2007                     	org	8199
   903  2007  20D4               	dw	8404
   904                           
   905                           ;Config register CONFIG2 @ 0x2008
   906                           ;	Brown-out Reset Selection bit
   907                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   908                           ;	Flash Program Memory Self Write Enable bits
   909                           ;	WRT = OFF, Write protection off
   910  2008                     	org	8200
   911  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setup

Critical Paths under _isr in COMMON

    _isr->_leerpot

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              3 COMMON     3     3      0
                        _enviarASCII
                            _leerpot
 ---------------------------------------------------------------------------------
 (3) _leerpot                                              3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _enviarASCII                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)
   _enviarASCII
   _leerpot

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sat May 07 20:04:41 2022

                     l82 0069                       u60 00C7                       u61 00C6  
                     u87 0067                      l710 002F                      l720 003B  
                    l712 0035                      l704 0017                      l730 0047  
                    l722 003F                      l714 0036                      l706 001B  
                    l740 0050                      l732 004A                      l724 0040  
                    l716 0037                      l708 001C                      l750 005F  
                    l742 0053                      l734 004B                      l726 0043  
                    l718 0038                      l752 0062                      l744 0057  
                    l736 004C                      l728 0046                      l754 0065  
                    l746 005A                      l738 004F                      l748 005B  
                    l774 00BC                      l776 00C1                      l778 00C7  
                    _isr 006A                      _pot 0077                     ?_isr 0070  
           ?_enviarASCII 0070                     i1l70 009A                     i1l94 00BB  
                   u1_20 00BB                     u1_21 00BA                     u2_20 00D7  
                   u2_21 00D6                     u3_20 0070                     u3_21 006F  
                   u4_20 0079                     u4_21 0078                     u5_20 0082  
                   u5_21 0081                     u9_27 00AC                     _main 00BC  
                   btemp 007E                     start 000C                    ??_isr 0073  
                  ?_main 0070                    _ANSEL 0188                    i1l100 00D7  
                  i1l700 00CD                    i1l702 00CF                    i1l760 0079  
                  i1l770 0091                    i1l762 007D                    i1l692 00A1  
                  i1l764 007E                    i1l756 006A                    i1l694 00A2  
                  i1l766 0082                    i1l758 0070                    i1l696 00B3  
                  i1l768 008C                    i1l698 00CC                    _RCREG 001A  
                  _SPBRG 0099                    _PORTA 0005                    _PORTB 0006  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _TXREG 0019          __end_of_leerpot 00BC  
                  _setup 0017                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 00CC  
                 ??_main 0077                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   _SPBRGH 009A                   _indice 0079  
              ??_leerpot 0070                   saved_w 007E  __end_of__initialization 0013  
         __pcstackCOMMON 0070            __end_of_setup 006A                  ??_setup 0076  
             __pmaintext 00BC               __pintentry 0004                  __ptext1 0017  
                __ptext2 006A                  __ptext3 00A1                  __ptext4 00CC  
                _leerpot 00A1                  _mensaje 007A     end_of_initialization 0013  
              _RCSTAbits 0018                _TXSTAbits 0098              _BAUDCTLbits 0187  
    start_initialization 000F              __end_of_isr 00A1            ??_enviarASCII 0070  
            __pbssCOMMON 0077                ___latbits 0002      __end_of_enviarASCII 00D8  
               ?_leerpot 0070        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C                _valor_old 0078               _ADCON0bits 001F  
             _ADCON1bits 009F              _enviarASCII 00CC               _INTCONbits 000B  
               intlevel1 0000               _OSCCONbits 008F  
